{"version":3,"sources":["components/ActorCard.js","model/ActorModel.js","components/MenuBar.js","pages/ActoresPage.js","components/MovieCard.js","model/MovieModel.js","pages/MoviePage.js","components/Carousel/Carousel.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","assets/images/cluster-clip-art_1093814.png","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["ActorCard","actorId","firstName","lastName","age","image","imdburl","getActorId","useState","redirectTo","history","useHistory","undefined","to","className","onClick","push","src","ActorModel","tmdbId","birthday","imdbLink","this","ageDifMs","Date","now","parse","ageDate","Math","abs","getUTCFullYear","MenuBar","filterText","sortOrder","handleFilter","handleSortBy","handleSortOrder","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","id","Nav","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","value","onChange","as","custom","defaultValue","style","cursor","icon","values","size","color","ActoresPage","actors","setActors","useEffect","actorsJson","map","actor","name1","name2","birthdate","img","setFilterText","sortBy","setSortBy","setSortOrder","actorsFiltered","filter","toLowerCase","includes","doFilter","sort","a","b","Number","actorCards","index","event","target","MovieCard","movie","Card","text","poster","Img","variant","Body","Title","name","release_year","ListGroup","Item","length","director","stars","plot","MovieModel","release_date","getFullYear","MoviePage","api_key","configData","tmdb_api_key","movies","setMovies","useParams","axios","get","moviesData1","Promise","all","data","results","moviesData2","allData","moviesId","moviesData","console","log","MoviesModel","title","runtime","crew","item","job","poster_path","overview","cast","slice","setData","stack","getMovies","Container","Row","Col","lg","BootstrapSlider","setresults","setmovies","thdbUrl","then","response","resItem","original_title","Carousel","fade","interval","alt","Caption","HomePage","props","NotFoundPage","MainNavBar","Brand","href","star","height","Link","disabled","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fab","faLongArrowAltUp","faLongArrowAltDown","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.384de577.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Redirect, Link, useHistory } from 'react-router-dom';\r\nimport './ActorCard.css'\r\n\r\n\r\nfunction ActorCard({actorId, firstName, lastName, age, image, imdburl, getActorId}) {\r\n\r\n    const [redirectTo, setRedirectTo] = useState();\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    if (redirectTo !== undefined) {\r\n        return <Redirect to={'/actors/' + redirectTo+'/movie/'}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6 card-box\">\r\n            <div className=\"card\"> \r\n                <div className=\"card-header\">\r\n                    <h5>\r\n                        <Link onClick={() =>history.push('/actors/' + actorId+'/movie/')}>{firstName  + ' ' + lastName}</Link>\r\n                    </h5>\r\n                </div>\r\n                <div className=\"img-box\">\r\n                    <img className=\"card-img\" src={image} />\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><span>Age:&nbsp;</span>{age}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ActorCard;\r\n","\r\nclass ActorModel {\r\n    constructor(tmdbId, firstName, lastName, birthday, image ,imdbLink) {\r\n        this.tmdbId = tmdbId;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.birthday = birthday;\r\n        this.image = image;\r\n        this.imdbLink = imdbLink;\r\n    }\r\n\r\n    age() {\r\n        var ageDifMs = Date.now() - Date.parse(this.birthday);\r\n        var ageDate = new Date(ageDifMs);\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    }\r\n\r\n}\r\n\r\nexport default ActorModel;","import React from 'react';\r\nimport { Navbar, Nav, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport './MenuBar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function MenuBar({filterText, sortOrder, handleFilter, handleSortBy, handleSortOrder}) {\r\n    \r\n    return (\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"primary\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    \r\n                    {/* Filter */}\r\n                    <Nav className=\"search\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Search:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl placeholder=\"Search actor\" aria-label=\"Filter\"value={filterText} onChange={handleFilter}  />\r\n                        </InputGroup>\r\n                    </Nav>\r\n\r\n                    {/* Sort */}\r\n                    <Nav className=\"sort\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Sort:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as=\"select\" custom onChange={handleSortBy}>\r\n                                    <option defaultValue=\"1\">Select</option>\r\n                                    <option value=\"1\">First Name</option>\r\n                                    <option value=\"2\">Last Name</option>\r\n                                    <option value=\"3\">Age</option>\r\n                            </FormControl>\r\n                            <div className=\"arrows\">\r\n                                <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon=\"long-arrow-alt-down\" values={sortOrder} size=\"lg\" color={sortOrder==='Asc'? '#d0cfca': '#0275df'}\r\n                                    onClick={()=>handleSortOrder('Asc')} />\r\n                                <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon=\"long-arrow-alt-up\" values={sortOrder} size=\"lg\" color={sortOrder==='Desc'? '#d0cfca': '#0275df'}\r\n                                    onClick={()=>handleSortOrder('Desc')}/>\r\n                            </div>\r\n                        </InputGroup>\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            \r\n    );\r\n};\r\n","//import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Container } from \"react-bootstrap\";\r\nimport './ActoresPage.css';\r\n\r\nimport ActorCard from '../components/ActorCard';\r\nimport ActorModel from '../model/ActorModel';\r\nimport MenuBar from '../components/MenuBar';\r\nimport actorsJson from '../actors.json';\r\n\r\nfunction ActoresPage({getActorId}) {\r\n\r\n    const [actors, setActors] = useState([]);\r\n\r\n    // We want to fetch the data from JSON only once the compoenent is mounting\r\n    useEffect(() => {\r\n        setActors(actorsJson.map(actor => new ActorModel(actor.tmdbId, actor.name1, actor.name2, actor.birthdate, actor.img, actor.imdbLink)));\r\n    }, []);\r\n\r\n    //Filter  \r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    const handleFilter = event => {\r\n        const filterText=event.target.value; \r\n        setFilterText(filterText); \r\n    }   \r\n\r\n\r\n    //Sort\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const [sortOrder, setSortOrder] = useState(\"Asc\");    \r\n\r\n    const handleSort = event => {\r\n        setSortBy(event.target.value);                \r\n    };\r\n\r\n    const handleSortOrder = (sortOrder) => {\r\n        setSortOrder(sortOrder);                \r\n    };\r\n\r\n\r\n    const doFilter = filterText => actor =>\r\n    !filterText || actor.firstName.toLowerCase().includes(filterText.toLowerCase()) ||\r\n    actor.lastName.toLowerCase().includes(filterText.toLowerCase()) ;\r\n\r\n    const actorsFiltered = actors.filter(doFilter(filterText));\r\n\r\n    if (sortBy===\"1\"){            \r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1);\r\n        else\r\n            actorsFiltered.sort((b, a) => (a.firstName > b.firstName) ? 1 : -1);\r\n    } else if (sortBy===\"2\"){\r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1);\r\n        else\r\n            actorsFiltered.sort((b, a) => (a.lastName > b.lastName) ? 1 : -1);\r\n    } else if (sortBy===\"3\"){\r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (Number(a.age()) - Number(b.age())));\r\n        else\r\n            actorsFiltered.sort((b, a) => (Number(a.age()) - Number(b.age())));\r\n    }\r\n\r\n    const actorCards = actorsFiltered.map((actor, index) => <ActorCard key={'act'+index }\r\n                                                        actorId = {actor.tmdbId}\r\n                                                        firstName = {actor.firstName} \r\n                                                        lastName = {actor.lastName}\r\n                                                        age = {actor.age()}   \r\n                                                        image = {actor.image} \r\n                                                        imdburl = {actor.imdbLink}\r\n                                                        getActorId = {getActorId} />)\r\n\r\n    //////////////\r\n\r\n    return (\r\n        <div className=\"p-actor\">\r\n            <MenuBar filterText={filterText} sortOrder={sortOrder} handleFilter={handleFilter} handleSortBy={handleSort} handleSortOrder={handleSortOrder} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {actorCards}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ActoresPage;","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport './MovieCard.css'\n\nfunction MovieCard({ movie }) {\n    //if (!movie) return '';\n    return (\n        <div className=\"c-movie\">\n            <Card bg=\"secondary\" text='white'>\n                <div className=\"card-horizontal\">\n                {movie.poster?<Card.Img variant=\"top\" src={movie.poster} />:null}\n                <Card.Body>\n                    <Card.Title>{`${movie.name} (${movie.release_year()}) `}</Card.Title>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item variant=\"secondary\">\n                                <span className=\"card-label\">Length:</span>{movie.length+\" minutes\"}\n                        </ListGroup.Item>\n                        <ListGroup.Item variant=\"secondary\">\n                            <span className=\"card-label\">Director:</span>{movie.director}</ListGroup.Item>\n                        <ListGroup.Item variant=\"secondary\">\n                            <span className=\"card-label\">Main stars:</span>{movie.stars}</ListGroup.Item>\n                        <ListGroup.Item variant=\"secondary\">\n                            <span className=\"card-label\">Overview:</span>\n                            <span>{movie.plot}</span>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card.Body>\n                </div>\n            </Card>\n        </div>\n    );\n}\n\nexport default MovieCard;","\r\nclass MovieModel {\r\n    constructor(id, release_date, name, length, director, poster ,plot, stars) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.length = length;\r\n        this.director = director;\r\n        this.poster = \"https://image.tmdb.org/t/p/w500\" + poster;\r\n        this.plot = plot;\r\n        this.stars = stars;        \r\n        this.release_date = release_date;\r\n    }\r\n\r\n    release_year(){\r\n        const rdate = new Date(this.release_date)\r\n        return rdate.getFullYear();\r\n    }\r\n    \r\n}\r\n\r\nexport default MovieModel;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport configData from \"../../package.json\";//to hide TMDB API keys\r\nimport MovieCard from '../components/MovieCard.js';\r\nimport MoviesModel from '../model/MovieModel.js';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction MoviePage() {\r\n    const api_key = configData.tmdb_api_key //get TMDB API key from config file\r\n    const [movies, setMovies] = useState([])\r\n\r\n    const {actorId} =  useParams();\r\n\r\n    //`movie id https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&&with_cast=${actorId}&sort_by=vote_average.desc`\r\n    // runtime `https://api.themoviedb.org/3/movie/277129?api_key=53d2ee2137cf3228aefae083c8158855&language=en-US`\r\n    // stars `https://api.themoviedb.org/3/movie/684426/credits?api_key=53d2ee2137cf3228aefae083c8158855&language=en-US`\r\n    // videos `https://api.themoviedb.org/3/movie/157336/videos?api_key=53d2ee2137cf3228aefae083c8158855`\r\n      \r\n    useEffect(() => {\r\n\r\n\r\n            const getMovies = async ()=> {\r\n                try {\r\n                    const moviesData1 = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_cast=${actorId}&sort_by=vote_average.desc`);\r\n                    const moviesData2 = await Promise.all(moviesData1.data.results.map(({ id }) => {\r\n                        return axios.all([\r\n                            axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${api_key}&language=en-US`),\r\n                            axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=en-US`)\r\n                          ])\r\n                    }));\r\n                    const allData = await Promise.all([moviesData1, moviesData2]);                \r\n\r\n                    const moviesId = allData[0].data.results\r\n                    const moviesData = allData[1]\r\n\r\n                    console.log(moviesData[0][1]);\r\n\r\n                    const setData = async () => {\r\n                        setMovies(moviesId.map((movie, index) => \r\n                            new MoviesModel(\r\n                                movie.id,\r\n                                movie.release_date,\r\n                                movie.title,\r\n                                moviesData[index][1].data.runtime, \r\n                                moviesData[index][0].data.crew.map(item =>                             \r\n                                    item.job===\"Director\"?\r\n                                      item.name : ''\r\n                                ),\r\n                                movie.poster_path , \r\n                                movie.overview, \r\n                                moviesData[index][0].data.cast.slice(0, 10).map(item =>                             \r\n                                    item.name+', '\r\n                                )\r\n                            )\r\n                        \r\n                        ))    \r\n    \r\n                    }\r\n                    setData();\r\n\r\n                } catch (err) {\r\n                    console.log(err.stack);\r\n                }\r\n            };\r\n            getMovies();\r\n\r\n\r\n    }, [actorId])\r\n\r\n\r\n\r\n    return (        \r\n        <div className=\"p-movies\">\r\n            <Container>\r\n                <Row>\r\n                    \r\n                    {movies.map((movie, index) => <Col key={\"col\"+index} lg={12}><MovieCard movie={movie}/></Col>)}\r\n                    \r\n                    \r\n                </Row>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MoviePage;","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nimport axios from 'axios';\r\nimport configData from \"../../../package.json\";//to hide TMDB API keys\r\nimport MovieModel from './../../model/MovieModel';\r\n\r\nfunction BootstrapSlider() {\r\n\r\n    const [results, setresults] = useState([])\r\n    const [movies, setmovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        const api_key = configData.tmdb_api_key //get TMDB API key from config file\r\n        const thdbUrl = `http://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}`\r\n        axios.get(thdbUrl).then(response => {\r\n            setresults(response.data.results)\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setmovies(\r\n            results.map(resItem => \r\n                new MovieModel(resItem.id,'',resItem.original_title,0,'',resItem.poster_path, resItem.overview,'')\r\n            )\r\n        )\r\n        \r\n    }, [results])\r\n\r\n    return (\r\n        <div className=\"c-carousel\">\r\n            <h2>Top rated movies</h2>      \r\n            <Carousel fade >{\r\n                movies.map((movie, index) => \r\n                    <Carousel.Item interval={1000} key={index}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={movie.poster}\r\n                        alt={movie.name}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>{movie.name}</h3>\r\n                        <p>{movie.plot}</p>\r\n                    </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                )\r\n            }    \r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BootstrapSlider;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport BootstrapSlider from './../../components/Carousel/Carousel';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage(props) {\r\n\r\n\r\n    return (       \r\n        <div className=\"p-homepage\">\r\n            <Container>\r\n                <BootstrapSlider />\r\n            </Container>\r\n        </div> \r\n    );\r\n\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction NotFoundPage(props) {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1 className=\"display-1\">404</h1>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","export default __webpack_public_path__ + \"static/media/cluster-clip-art_1093814.64edfba6.png\";","import React from 'react'\r\nimport { Navbar, Nav} from 'react-bootstrap';\r\nimport star from '../../assets/images/cluster-clip-art_1093814.png';\r\n\r\nexport default function MainNavBar() {\r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    src={star}//\"https://purepng.com/public/uploads/large/purepng.com-hot-golden-starstargeometricallydecagonconcavestardomgold-1421526502376z4rrq.png\"\r\n                    height=\"40\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"logo\"\r\n                />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#Actors\">Actors</Nav.Link>\r\n                        <Nav.Link href=\"#Contact\" disabled>Contact</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport ActoresPage from './pages/ActoresPage';\r\nimport MoviePage from './pages/MoviePage';\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <HashRouter>\r\n        \r\n          <header>\r\n              <span className=\"header-text\">Movies App</span>               \r\n          </header>\r\n          \r\n          <NavBar/>\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\"><HomePage/></Route>\r\n            <Route exact path=\"/home\"><HomePage/></Route>\r\n            <Route exact path=\"/actors\"><ActoresPage />   </Route>\r\n            <Route exact path=\"/actors/:actorId/movie\"><MoviePage /></Route>\r\n            <Route path=\"*\"><NotFoundPage/></Route>\r\n          </Switch>\r\n      </HashRouter>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLongArrowAltUp, faLongArrowAltDown } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fab, faLongArrowAltUp, faLongArrowAltDown)\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}