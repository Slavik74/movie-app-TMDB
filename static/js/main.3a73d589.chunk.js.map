{"version":3,"sources":["components/ActorCard.js","model/ActorModel.js","components/MenuBar.js","pages/ActoresPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActorCard","firstName","lastName","age","image","imdb","className","href","target","src","ActorModel","birthday","imdbLink","this","ageDifMs","Date","now","parse","ageDate","Math","abs","getUTCFullYear","MenuBar","filterText","sortOrder","handleFilter","handleSortBy","handleSortOrder","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","id","Nav","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","value","onChange","as","custom","defaultValue","style","cursor","icon","values","size","color","onClick","ActoresPage","useState","actors","setActors","useEffect","actorsJson","map","actor","name1","name2","birthdate","img","setFilterText","sortBy","setSortBy","setSortOrder","actorsFiltered","filter","toLowerCase","includes","doFilter","sort","a","b","Number","actorCards","index","Container","event","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fab","faLongArrowAltUp","faLongArrowAltDown","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a73d589.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './ActorCard.css'\r\n\r\nfunction ActorCard({firstName, lastName, age, image, imdb}) {\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6 card-box\">\r\n            <div className=\"my-card\"> \r\n                <div className=\"card-header\">\r\n                    <h5><a href={imdb} target=\"_blank\">{firstName  + ' ' + lastName}</a></h5>\r\n                </div>\r\n                <div className=\"img-box\">\r\n                    <img className=\"my-card-img\" src={image} />\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><span>Age:&nbsp;</span>{age}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ActorCard;\r\n","\r\nclass ActorModel {\r\n    constructor(firstName, lastName, birthday, image ,imdbLink) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.birthday = birthday;\r\n        this.image = image;\r\n        this.imdbLink = imdbLink;\r\n    }\r\n\r\n    age() {\r\n        var ageDifMs = Date.now() - Date.parse(this.birthday);\r\n        var ageDate = new Date(ageDifMs);\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    }\r\n\r\n}\r\n\r\nexport default ActorModel;","import React from 'react';\r\nimport { Navbar, Nav, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport './MenuBar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function MenuBar({filterText, sortOrder, handleFilter, handleSortBy, handleSortOrder}) {\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"primary\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    \r\n                    {/* Filter */}\r\n                    <Nav className=\"search\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Search:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl placeholder=\"Search actor\" aria-label=\"Filter\"value={filterText} onChange={handleFilter}  />\r\n                        </InputGroup>\r\n                    </Nav>\r\n\r\n                    {/* Sort */}\r\n                    <Nav className=\"sort\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Sort:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as=\"select\" custom onChange={handleSortBy}>\r\n                                    <option defaultValue=\"1\">Select</option>\r\n                                    <option value=\"1\">First Name</option>\r\n                                    <option value=\"2\">Last Name</option>\r\n                                    <option value=\"3\">Age</option>\r\n                            </FormControl>\r\n                            <div className=\"arrows\">\r\n                                <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon=\"long-arrow-alt-down\" values={sortOrder} size=\"lg\" color={sortOrder==='Asc'? '#d0cfca': '#0275df'}\r\n                                    onClick={()=>handleSortOrder('Asc')} />\r\n                                <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon=\"long-arrow-alt-up\" values={sortOrder} size=\"lg\" color={sortOrder==='Desc'? '#d0cfca': '#0275df'}\r\n                                    onClick={()=>handleSortOrder('Desc')}/>\r\n                            </div>\r\n                        </InputGroup>\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            \r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n","//import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Container } from \"react-bootstrap\";\r\nimport './ActoresPage.css';\r\n\r\nimport ActorCard from '../components/ActorCard';\r\nimport ActorModel from '../model/ActorModel';\r\nimport MenuBar from '../components/MenuBar';\r\nimport actorsJson from '../actors.json';\r\n\r\nfunction ActoresPage() {\r\n\r\n    const [actors, setActors] = useState([]);\r\n\r\n    // We want to fetch the cars data from JSON only once the compoenent is mounting\r\n    useEffect(() => {\r\n        setActors(actorsJson.map(actor => new ActorModel(actor.name1, actor.name2, actor.birthdate, actor.img, actor.imdbLink)));\r\n    }, []);\r\n\r\n\r\n    //Filter  \r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    const handleFilter = event => {\r\n        const filterText=event.target.value; \r\n        setFilterText(filterText); \r\n    }   \r\n\r\n\r\n    //Sort\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const [sortOrder, setSortOrder] = useState(\"Asc\");    \r\n\r\n    const handleSort = event => {\r\n        setSortBy(event.target.value);                \r\n    };\r\n\r\n    const handleSortOrder = (sortOrder) => {\r\n        setSortOrder(sortOrder);                \r\n    };\r\n\r\n\r\n    const doFilter = filterText => actor =>\r\n    !filterText || actor.firstName.toLowerCase().includes(filterText.toLowerCase()) ||\r\n    actor.lastName.toLowerCase().includes(filterText.toLowerCase()) ;\r\n\r\n    const actorsFiltered = actors.filter(doFilter(filterText));\r\n\r\n    if (sortBy===\"1\"){            \r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1);\r\n        else\r\n            actorsFiltered.sort((b, a) => (a.firstName > b.firstName) ? 1 : -1);\r\n    } else if (sortBy===\"2\"){\r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1);\r\n        else\r\n            actorsFiltered.sort((b, a) => (a.lastName > b.lastName) ? 1 : -1);\r\n    } else if (sortBy===\"3\"){\r\n        if (sortOrder===\"Asc\")\r\n            actorsFiltered.sort((a, b) => (Number(a.age()) - Number(b.age())));\r\n        else\r\n            actorsFiltered.sort((b, a) => (Number(a.age()) - Number(b.age())));\r\n    }\r\n\r\n    const actorCards = actorsFiltered.map((actor, index) => <ActorCard key={'act'+index }\r\n                                                        firstName = {actor.firstName} \r\n                                                        lastName = {actor.lastName}\r\n                                                        age = {actor.age()}   \r\n                                                        image = {actor.image} \r\n                                                        imdb = {actor.imdbLink}/>)\r\n\r\n    //////////////\r\n\r\n    return (\r\n        <Container className=\"p-movie\">\r\n            <div className=\"container\">\r\n                <header>\r\n                    <span className=\"header-text\">Actors</span>               \r\n                </header>\r\n\r\n                <MenuBar filterText={filterText} sortOrder={sortOrder} handleFilter={handleFilter} handleSortBy={handleSort} handleSortOrder={handleSortOrder} />\r\n                <div className=\"row\">\r\n                    {actorCards}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default ActoresPage;","import ActoresPage from './pages/ActoresPage';\nfunction App() {\n  return (\n      <ActoresPage />      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faLongArrowAltUp, faLongArrowAltDown } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, faLongArrowAltUp, faLongArrowAltDown)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}